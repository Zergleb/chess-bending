;; Analyzed by ClojureScript 0.0-3297
{:use-macros {match cljs.core.match}, :excludes #{}, :name elemental-chess.core, :imports {History goog.History}, :requires {reagent reagent.core, ajax.core ajax.core, secretary secretary.core, markdown.core markdown.core, reagent.session reagent.session, session reagent.session, EventType goog.history.EventType, reagent.core reagent.core, r reagent.core, goog.history.EventType goog.history.EventType, History goog.History, events goog.events, string clojure.string, secretary.core secretary.core, clojure.string clojure.string, cljs.core.match cljs.core.match, goog.events goog.events}, :uses {POST ajax.core, atom reagent.core, md->html markdown.core, GET ajax.core}, :defs {game-board {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 93, :column 7, :end-line 93, :end-column 17, :arglists (quote ([gameboard]))}, :name elemental-chess.core/game-board, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 17, :method-params ([gameboard]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([gameboard]))}, playerClass {:name elemental-chess.core/playerClass, :file "src-cljs\\elemental_chess\\core.cljs", :line 75, :column 13, :end-line 75, :end-column 29, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 75, :column 18, :end-line 75, :end-column 29}}, fetch-docs! {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 139, :column 7, :end-line 139, :end-column 18, :arglists (quote ([]))}, :name elemental-chess.core/fetch-docs!, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cell-color {:name elemental-chess.core/cell-color, :file "src-cljs\\elemental_chess\\core.cljs", :line 68, :column 3, :end-line 68, :end-column 18, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 68, :column 8, :end-line 68, :end-column 18}}, about-page {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([]))}, :name elemental-chess.core/about-page, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, home-page {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 97, :column 7, :end-line 97, :end-column 16, :arglists (quote ([]))}, :name elemental-chess.core/home-page, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 146, :column 7, :end-line 146, :end-column 12, :arglists (quote ([]))}, :name elemental-chess.core/init!, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pieceClass {:name elemental-chess.core/pieceClass, :file "src-cljs\\elemental_chess\\core.cljs", :line 76, :column 13, :end-line 76, :end-column 28, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 76, :column 18, :end-line 76, :end-column 28}}, elementClass {:name elemental-chess.core/elementClass, :file "src-cljs\\elemental_chess\\core.cljs", :line 77, :column 13, :end-line 77, :end-column 30, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 77, :column 18, :end-line 77, :end-column 30}}, cellArray {:name elemental-chess.core/cellArray, :file "src-cljs\\elemental_chess\\core.cljs", :line 74, :column 13, :end-line 74, :end-column 27, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 74, :column 18, :end-line 74, :end-column 27}}, navbar {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 52, :column 7, :end-line 52, :end-column 13, :arglists (quote ([]))}, :name elemental-chess.core/navbar, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, game-consts {:name elemental-chess.core/game-consts, :file "src-cljs\\elemental_chess\\core.cljs", :line 31, :column 1, :end-line 31, :end-column 25, :const true, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 31, :column 14, :end-line 31, :end-column 25, :const true}}, page {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 113, :column 7, :end-line 113, :end-column 11, :arglists (quote ([]))}, :name elemental-chess.core/page, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pages {:name elemental-chess.core/pages, :file "src-cljs\\elemental_chess\\core.cljs", :line 109, :column 1, :end-line 109, :end-column 11, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 109, :column 6, :end-line 109, :end-column 11}}, mount-components {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 142, :column 7, :end-line 142, :end-column 23, :arglists (quote ([]))}, :name elemental-chess.core/mount-components, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, game-cell {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 67, :column 7, :end-line 67, :end-column 16, :arglists (quote ([cell row column]))}, :name elemental-chess.core/game-cell, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 16, :method-params ([cell row column]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([cell row column]))}, app-state {:name elemental-chess.core/app-state, :file "src-cljs\\elemental_chess\\core.cljs", :line 15, :column 1, :end-line 15, :end-column 15, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 15, :column 6, :end-line 15, :end-column 15}}, hook-browser-navigation! {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 129, :column 7, :end-line 129, :end-column 31, :arglists (quote ([]))}, :name elemental-chess.core/hook-browser-navigation!, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, game-row {:protocol-inline nil, :meta {:file "c:\\wrk\\elemental-chess\\src-cljs\\elemental_chess\\core.cljs", :line 85, :column 7, :end-line 85, :end-column 15, :arglists (quote ([rowindex row]))}, :name elemental-chess.core/game-row, :variadic false, :file "src-cljs\\elemental_chess\\core.cljs", :end-column 15, :method-params ([rowindex row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rowindex row]))}}, :require-macros {secretary secretary.core, secretary.core secretary.core, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:img.cellimage :home :div.navbar.navbar-inverse.navbar-fixed-top :a.navbar-brand :else :ns :name :div.navbar-header :li :file :docs :end-column :src :page :elements :prefix :column :center :div :ul.nav.navbar-nav :div.navbar-collapse.collapse :line :div.row :div.container :class :gameboard :end-line :players :span.cell :pieces :h1 :arglists :doc :handler :p :test :href :a :about :span :div.jumbotron}, :order [:gameboard :pieces :players :elements :class :div.navbar.navbar-inverse.navbar-fixed-top :div.container :div.navbar-header :a.navbar-brand :href :div.navbar-collapse.collapse :ul.nav.navbar-nav :li :home :page :a :about :div :span.cell :img.cellimage :src :span :else :center :div.row :div.jumbotron :h1 :p :ns :name :file :end-column :column :line :end-line :arglists :doc :test :prefix :handler :docs]}, :doc nil}